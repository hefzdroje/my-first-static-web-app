@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app. můžu to měnit juchů

<!---->
<style>
    html, body {
        overflow: hidden;
        width: 100%;
        height: 100%;
        margin: 0;
        padding: 0;
    }
    #renderCanvas {
        width: 100%;
        height: 100%;
        touch-action: none;
    }
</style>

<canvas id="renderCanvas"></canvas>

    <script>

    
    let canvas = document.getElementById("renderCanvas");
    const createScene = function () {
    const scene = new BABYLON.Scene(engine);

    const camera = new BABYLON.ArcRotateCamera("Camera", (Math.PI / 2) - 0.5, Math.PI / 2, -250, BABYLON.Vector3.Zero(), scene);//2
        
    camera.attachControl(canvas, true);
        scene.clearColor = new BABYLON.Color3(0.7, 0.7, 0.7);

    const light = new BABYLON.HemisphericLight("light", new BABYLON.Vector3(1, 1, 0), scene);

        const sphere = BABYLON.MeshBuilder.CreateSphere("sphere", { segments: 32, diameter: 5.1 });
    

    //console.log("označení všeho -> Ctrl+Shift+šipka vpravo    v poli I/0 ->    /vstupni text;     v poli prikazu pro paty zaznam ->      5,5!!! ")
        
        var valec = BABYLON.Mesh.CreateCylinder("valec", 31, 61, 61, 36, 1, scene, false, BABYLON.Mesh.DEFAULTSIDE);
        var matval = new BABYLON.StandardMaterial("matvalec", scene);
        matval.emissiveColor = new BABYLON.Color3(0.8, 0.6, 0.8);
        valec.material = matval;
        valec.position.y = -30;

        BABYLON.SceneLoader.ImportMesh("", "", "https://hefzdroje.github.io/libs/trion.stl", scene, function (newMeshes0) { // beg ImportMesh freza
            var cyl0 = newMeshes0[0];

            var mat0 = new BABYLON.StandardMaterial("mat10", scene);
            mat0.emissiveColor = new BABYLON.Color3(0.4, 1.04, 0.4);
            cyl0.material = mat0;
            cyl0.position.x = 50;
            //cyl.rotate(axisx, Math.PI / 2, BABYLON.Space.LOCAL);

            var axisy0 = new BABYLON.Vector3(0, 6, 0);
            var axisx0 = new BABYLON.Vector3(6, 0, 0);
            var axisz0 = new BABYLON.Vector3(0, 0, 6);

            cyl0.rotate(axisx0, Math.PI / 2, BABYLON.Space.LOCAL);

        BABYLON.SceneLoader.ImportMesh("", "", "https://hefzdroje.github.io/libs/freza.stl", scene, function (newMeshes) { // beg ImportMesh freza
            var cyl = newMeshes[0];
            //console.log(" cyl = ",cyl.vertices[]);
            //console.log(" cyl = " + cyl.vertices[]);
            //console.log("cyl = ", cyl.geometry._indices[3000]);
            //console.log("cyl = ", cyl.geometry._normal);
            //console.log("cyl = ", cyl.geometry._vertexBuffers);
            //console.log("cyl = ", cyl._geometry._meshes);
            //console.log("cyl = ", cyl.geometry._totalVertices);

            var mat = new BABYLON.StandardMaterial("mat1", scene);
            mat.emissiveColor = new BABYLON.Color3(0.4, 0.4, 0.4);
            cyl.material = mat;
            cyl.position.x = 0;
            //cyl.rotate(axisx, Math.PI / 2, BABYLON.Space.LOCAL);

            var axisy = new BABYLON.Vector3(0, 6, 0);
            var axisx = new BABYLON.Vector3(6, 0, 0);
            var axisz = new BABYLON.Vector3(0, 0, 6);

            cyl.rotate(axisx, Math.PI / 2, BABYLON.Space.LOCAL);
            
//-------------------------------------ANIMACE----------------------------------------------------------------



                cit = 0;
                var angle = 0.03;


                scene.registerBeforeRender(function () { // beg animations


                    //cyl.rotate(axisz, angle*10, BABYLON.Space.LOCAL);
                    cyl.rotate(axisy, angle * 3 );
                    
                    cit += 0.3;


                    if (cit <= 100)
                    { 
                       //console.log(" ------cit------ = ",cit);
                        cyl.position.x = cit;

                        sphere.scaling.x = cit/15;
                        sphere.scaling.y = cit/15;
                        sphere.scaling.z = cit/15;
                    }



                    //console.log(" ------------s = ",s);

                }); // end animations



//---------------------------------------end ANIMACE--------------------------------------------------------------

        });  //end  pro ImportMesh freza
      });  //end  pro ImportMesh trion

        return scene;
    }

/*
    var engine = new BABYLON.Engine(canvas, true, { preserveDrawingBuffer: true, stencil: true });
    var scene = createScene();

    engine.runRenderLoop(function () {
        if (scene) {
            scene.render();
        }
    });
    // Resize
    window.addEventListener("resize", function () {
        engine.resize();
    });
*/
    </script >




